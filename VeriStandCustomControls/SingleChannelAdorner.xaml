<!-- This adorner is used for displaying two channel text boxes and popups for selecting the channels bound to a control -->
    <UserControl x:Class="NationalInstruments.VeriStand.CustomControlsExamples.SingleChannelAdorner"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ni="http://schemas.ni.com/controls/2009/xaml/presentation"
             xmlns:shell="clr-namespace:NationalInstruments.VeriStand.Shell;assembly=NationalInstruments.VeriStand.Configuration">
    <UserControl.Resources>
        <!-- this style defines the behavior of the text boxes which show channel values. Mostly it just does a bunch of animations when the mouse is moved over the control.  If you didn't want
        that behavior or wanted to simplify the xaml you could remove this section-->
        <Style TargetType="TextBox" x:Name="_textBoxForMultiLineValueAdorners" x:Key="_textBoxForMultiLineValueAdorners">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="RootElement">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#FF99C1E2" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused">
                                        <!-- Eliminated the validation element -->
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <!-- Eliminated the validation element -->
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                                <Grid>
                                    <!-- Changed background when readonly -->
                                    <Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="White" />
                                    <!-- Changed borderThickness in the next line from 1 to 0 -->
                                    <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="0">
                                        <!-- Removed extraneous grid rows that are needed to center the text on a single line setup. -->
                                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                            <!-- Changed borderThickness in the next line from {TemplateBinding BorderThickness} to 0 -->
                            <Border x:Name="FocusVisualElement" Margin="1" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF6DBDD1" BorderThickness="0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
<!-- template for the buttons which gives the buttons a browse icon -->
        <ControlTemplate x:Key="Button_Template">
            <Image Source="Resources/Browse_16x16.png"/>
        </ControlTemplate>
    </UserControl.Resources>
<!-- This is where our actual control layout starts.  It defines a grid with two string controls and two buttons.  Each button contains a channel popup which is shown the button is pressed -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.1*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.1*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0.1*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button x:Name="FirstChannelSelect" Grid.Column="1" Grid.Row="1" Command="{Binding LoadFirstPopupCommand}"
                                   IsEnabled="True" Visibility="Visible"   
                                   Template="{Binding Source={StaticResource Button_Template}}">

                <shell:ChannelPopup x:Name="FirstUiSdfPopup" DockPanel.Dock="Bottom" PlacementTarget="{Binding ElementName=FirstChannelSelect}"
                                   Placement="BelowCenter" IsOpen="False"/>
            </Button>
        </Grid>
        
        <StackPanel Grid.Column="0" Grid.Row="0" Margin="1" Orientation="Horizontal">

            <ni:StringControl  x:Name="FirstTextControl"  Style="{DynamicResource _textBoxForMultiLineValueAdorners}" 
                               MinWidth="90" MinHeight="20"
                              Width="100" Height="Auto" MaxHeight="60" Margin="2" Padding="2" 
                               FontSize="10" VerticalScrollBarVisibility="Auto"
                              TextWrapping="Wrap" SelectOnFocus="True" BorderThickness="1"/>
        </StackPanel>
    </Grid>
</UserControl>
